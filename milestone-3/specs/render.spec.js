
/**
 * Generated by https://github.com/dsheiko/puppetry
 * on Mon Jul 29 2019 19:48:26 GMT+0530 (IST)
 * Suite: render
 */

var nVer = process.version.match( /^v(\d+)/ );
if ( !nVer || nVer[ 1 ] < 9 ) {
  console.error( "WARNING: You have an outdated Node.js version " + process.version
    + ". You need at least v.9.x to run this test suite." );
}


const {
        bs, util, fetch, localStorage
      } = require( "../lib/bootstrap" )( "render" ),
      devices = require( "puppeteer/DeviceDescriptors" );



jest.setTimeout( 50000 );

// Environment variables
const ENV = {

};

const FORM_FIELDS = ['name', 'phno', 'emailaddress', 'department1', 'department2'];
const TEXT_FORM_FIELDS = ['name', 'phno', 'emailaddress'];
const SELECT_FORM_FIELDS = ['department1', 'department2'];

const readRootConfig = function() {
  let { filename } = module;
  let [root] = filename.split('specs/render.spec');
  return `file://${root}src/index.html`;
};

const indexLink = readRootConfig();

const testFormResults = async (options) => {
  TEXT_FORM_FIELDS.forEach(async (key) => {
    let value = options[key];
    if (value) {
      await bs.page.type(`[name="${key}"]`, value);
    }
  });

  SELECT_FORM_FIELDS.forEach(async (key) => {
    let value = options[key];
    if (value) {
      await bs.page.select(`[name="${key}"]`, value);
    }
  });

  await ( await SUBMIT_ENROLLMENT() ).click( {"button":"left"} );
  let bodyText = await bs.page.$eval('#results', el => el.innerText)

  var expResultText = (Object.entries(options) || []).reduce(function(innerHtml, [key, value]) {
    return `${innerHtml}${key}: ${value}`;
  }, '');

  expect(bodyText).toContain(expResultText);
}

const SUBMIT_ENROLLMENT = async () => bs.query( "[type='submit']", "SUBMIT_ENROLLMENT" );


describe("render", async () => {
  beforeAll(async () => {
    await bs.setup();
  });

  afterAll(async () => {
    await bs.teardown();
  });


  describe("Check Student Enrollment", async () => {

    test("Check name validation", async () => {
      let result, assert;

      // Navigating to file:///Users/user/milestone-tests/src/index.html
      await bs.page.goto(indexLink, {"timeout":3000,"waitUntil":"domcontentloaded"} );


      await testFormResults({
        name: 'sdcdsc',
        phno: '345435345',
        emailaddress: 'scdscds.dfvdfv@college.edu',
        department1: 'CIVIL',
        department2: 'CSE'
      });
    });
  });

});
